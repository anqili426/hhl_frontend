// Original benchmark:
// Source: Robert Dickerson, Qianchuan Ye, Michael K. Zhang, and Benjamin Delaware. 2022. RHLE: Modular Deductive Verification of Relational ∀∃ Properties.
// Available at: https://github.com/rcdickerson/orhle/blob/6f699e0809cc59e89ca2dd47a735fe1a6dc7a100/experiments/gni/nondet-leak2.imp

method leak2(high: Int, low: Int, i: Int) returns (res: Int)
requires forall <_s1>, <_s2> :: (_s1[i] == 1 && _s2[i] == 2) ==> (_s1[low] == _s2[low])
requires exists <_s1> :: _s1[i] == 1 && _s1[high] != 0 && (forall <_s2> :: _s2[i] == 2 ==> _s2[high] != _s1[high])
ensures exists <_s1> :: _s1[i] == 1 && (forall <_s2> :: _s2[i] == 2 ==> _s2[res] != _s1[res])
{
    var coin: Int
    havoc coin {hint1}
    use hint1(0)
    assume coin == 0 || coin == 1

    if (coin == 0) {
        res := high + low
    } else {
        res := low
    }
}