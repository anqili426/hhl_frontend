// Original benchmark:
// Source: Robert Dickerson, Qianchuan Ye, Michael K. Zhang, and Benjamin Delaware. 2022. RHLE: Modular Deductive Verification of Relational ∀∃ Properties.
// Available at: https://github.com/rcdickerson/orhle/blob/6f699e0809cc59e89ca2dd47a735fe1a6dc7a100/experiments/delimited-release/conditional-leak.imp

method cond(l: Int, h1: Int, h2: Int, i: Int) returns (res: Int)
requires forall <_s1>, <_s2> :: (_s1[i] == 1 && _s2[i] == 2) ==>
            (exists <_s3> :: _s3[i] == 3 &&
                     _s1[h1] == _s3[h1] &&
                     _s1[h2] == _s3[h2] &&
                     _s1[l] == _s2[l] &&
                     _s2[l] == _s3[l] &&
                     (_s1[l] == 0 ==> ( ((_s1[h1] % 2) == (_s2[h1] % 2)) && ((_s2[h1] % 2) == (_s3[h1] % 2))) ) &&
                     (_s1[l] != 0 ==> ( ((_s1[h2] % 2) == (_s2[h2] % 2)) && ((_s2[h2] % 2) == (_s3[h2] % 2))) )
            )
requires exists <_s1>, <_s2> :: (_s1[i] == 1 && _s2[i] == 2) &&
             (forall <_s3> :: _s3[i] == 3 ==>
                (_s1[l] == _s2[l] &&
                 _s2[l] == _s3[l] &&
                 _s1[l] == 0 &&
                 ((_s2[h1] % 2) != (_s3[h1] % 2))
              )
             )
ensures exists <_s1>, <_s2> :: (_s1[i] == 1 && _s2[i] == 2) &&
    (forall <_s3> :: _s3[i] == 3  ==> _s2[res] != _s3[res])
{
    if (l == 0) {
        res := h1 % 2
    } else {
        res := h1 % 2
    }
}