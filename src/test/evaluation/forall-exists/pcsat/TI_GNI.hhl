// Original benchmark:
// Source: Hiroshi Unno, Tachio Terauchi and Eric Koskinen. 2021. Constraint-Based Relational Verification.
// Available at: https://github.com/hiroshi-unno/coar/blob/299e979bfce7d9b0532586bfc42b449fd0451531/benchmarks/pfwnCSP/cav2021rel/TI_GNI_hFF.clp

method TI_GNI(low: Int, high: Int) returns (res: Int)
requires forall <_s1>, <_s2> :: _s1[low] == _s2[low]
ensures forall <_s1>, <_s2> :: (exists <_s3> :: _s3[high] == _s1[high] && _s3[res] == _s2[res])
{
    var x: Int
    if (high > 0) {
        havoc x {hint1}
        if (x >= low) {
            res := x
        } else {
            res := low
        }
    } else {
        x := low
        var k: Int
        havoc k {hint2}
        assume k >= 0
        res := x + k
    }
	use forall <_s2> :: hint1(_s2[res])
	use forall <_s2> :: hint2(_s2[res] - _s2[low])
}
