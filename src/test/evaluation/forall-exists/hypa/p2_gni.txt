method p2_gni() returns (h: Int, b: Int, o: Int)
ensures forall _s1: State, _s2: State :: <_s1> && <_s2> ==> (exists _s3: State :: <_s3> && get(_s3, h) == get(_s2, h) && get(_s3, o) == get(_s1, o) && get(_s3, b) == get(_s1, b))
{
    o := 0

    havoc b {hint1}

    havoc h {hint2}

    var l: Int
    havoc l {hint3}

    b := b + l

    use forall _s1: State, _s2: State :: <_s1> && <_s2> ==> hint1(1) && hint2(get(_s2, h)) && hint3(get(_s1, b) - 1)
}