// Not sure about spec translation
method leak(h: Int, l: Int) returns (res: Int)
requires forall <_s1> ::
    (exists <_s2> :: _s1[h] != _s2[h] && _s1[l] == _s2[l])
ensures forall <_s1> ::
    (exists <_s2> :: _s1[l] == _s2[l] && _s1[res] == _s2[res] && _s1[h] != _s2[h])
{
    res := h + l
}