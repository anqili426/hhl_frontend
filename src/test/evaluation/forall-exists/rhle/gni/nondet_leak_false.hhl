// Original benchmark:
// Source: Robert Dickerson, Qianchuan Ye, Michael K. Zhang, and Benjamin Delaware. 2022. RHLE: Modular Deductive Verification of Relational ∀∃ Properties.
// Available at: https://github.com/rcdickerson/orhle/blob/6f699e0809cc59e89ca2dd47a735fe1a6dc7a100/experiments/gni/nondet-leak.imp

method leak(high: Int, low: Int, i: Int) returns (res: Int)
requires exists <_s> :: _s[i] == 2
requires forall <_s1>, <_s2> :: (_s1[i] == 1 && _s2[i] == 2) ==> (_s1[low] == _s2[low])
ensures forall <_s1> :: _s1[i] == 1 ==>
    (exists <_s2> :: (_s2[i] == 2 && _s1[res] == _s2[res]))
{
    var r: Int
    havoc r {hint1}
    assume r >= 0 && r < 10
    use hint1(0)
    use hint1(1)
    use hint1(2)
    use hint1(3)
    use hint1(4)
    use hint1(5)
    use hint1(6)
    use hint1(7)
    use hint1(8)
    use hint1(9)

    if (r == 5) {
        res := high + low
    } else {
        res := low
    }
}