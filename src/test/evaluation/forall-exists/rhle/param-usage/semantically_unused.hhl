method unused(p1: Int, p2: Int, i: Int) returns (res: Int)
requires forall <_s1a>, <_s2a> :: _s1a[i] == 1 && _s2a[i] == 2 ==>
                    (exists <_s1b>, <_s2b> :: _s1b[i] == 3 && _s2b[i] == 4 &&
                                              _s1a[p1] == _s1b[p1] &&
                                              _s1a[p2] != _s1b[p2] &&
                                              _s2a[p1] != _s2b[p1] &&
                                              _s2a[p2] == _s2b[p2])
ensures forall <_s1a>, <_s2a> :: _s1a[i] == 1 && _s2a[i] == 2 ==>
                    (exists <_s1b>, <_s2b> :: _s1b[i] == 3 && _s2b[i] == 4 && (_s1a[res] == _s1b[res] || _s2a[res] == _s2b[res]))
{
    var x: Int
    var y: Int
    x := p1 + p2
    y := x - p2
    res := y
}