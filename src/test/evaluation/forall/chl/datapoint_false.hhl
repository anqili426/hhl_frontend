// P1
method compare1(fiscalQuarter1: Int, sectorCode1: Int, industryCode1: Int, fiscalQuarter2: Int, sectorCode2: Int, industryCode2: Int, i: Int) returns (res: Int)
requires forall <_s1>, <_s2> :: _s1[i] == 1 && _s2[i] == 2 ==>
    _s1[fiscalQuarter1] == _s2[fiscalQuarter2] && _s1[sectorCode1] == _s2[sectorCode2] &&
    _s1[industryCode1] == _s2[industryCode2] && _s1[fiscalQuarter2] == _s2[fiscalQuarter1] &&
    _s1[sectorCode2] == _s2[sectorCode1] && _s1[industryCode2] == _s2[industryCode1]
ensures forall <_s1>, <_s2> :: _s1[i] == 1 && _s2[i] == 2 ==>
    ((_s1[res] > 0 && _s2[res] < 0) || (_s1[res] < 0 && _s2[res] > 0) || (_s1[res] == 0 &&
        _s2[res] == 0))
{
    var fiscalRes: Int 
    if (fiscalQuarter1 > fiscalQuarter2) {
        fiscalRes := 1
    } else {
        if (fiscalQuarter1 == fiscalQuarter2) {
            fiscalRes := 0
        } else {
            fiscalRes := -1
        }
    }

    if (fiscalRes != 0) {
        res := fiscalRes
    } else {
        if (sectorCode1 > 0) {
            if (sectorCode1 > sectorCode2) {
                res := sectorCode1 - sectorCode2
            } else {
                if (sectorCode1 < sectorCode2) {
                    res := sectorCode2 - sectorCode1
                } else {
                    res := 0
                }
            }
        } else {
            if (industryCode1 > 0) {
                if (industryCode1 > industryCode2) {
                    res := industryCode1 - industryCode2
                } else {
                    if (industryCode1 < industryCode2) {
                        res := industryCode2 - industryCode1
                    } else {
                        res := 0
                    }
                }
            } else {
                if (sectorCode1 > 0) {
                    res := -1
                } else {
                    if (industryCode2 > 0) {
                        res := -1
                    } else {
                        res := 0
                    }
                }
            }
        }
    }
}

// P2
method compare2(fiscalQuarter1: Int, sectorCode1: Int, industryCode1: Int, fiscalQuarter2: Int, sectorCode2: Int, industryCode2: Int, i: Int) returns (res: Int)
requires forall <_s1>, <_s2>, <_s3> :: _s1[i] == 1 && _s2[i] == 2 && _s3[i] == 3 ==> 
    _s1[fiscalQuarter1] == _s3[fiscalQuarter1] && _s1[sectorCode1] == _s3[sectorCode1] && _s1[industryCode1] == _s3[industryCode1] &&
    _s1[fiscalQuarter2] == _s2[fiscalQuarter1] && _s1[sectorCode2] == _s2[sectorCode1] && _s1[industryCode2] == _s2[industryCode1] &&
    _s2[fiscalQuarter2] == _s3[fiscalQuarter2] && _s2[sectorCode2] == _s3[sectorCode2] && _s2[industryCode2] == _s3[industryCode2]
ensures forall <_s1>, <_s2>, <_s3> :: _s1[i] == 1 && _s2[i] == 2 && _s3[i] == 3 ==>
    (_s1[res] > 0 && _s2[res] > 0 ==> _s3[res] > 0)
{
    var fiscalRes: Int 
    if (fiscalQuarter1 > fiscalQuarter2) {
        fiscalRes := 1
    } else {
        if (fiscalQuarter1 == fiscalQuarter2) {
            fiscalRes := 0
        } else {
            fiscalRes := -1
        }
    }

    if (fiscalRes != 0) {
        res := fiscalRes
    } else {
        if (sectorCode1 > 0) {
            if (sectorCode1 > sectorCode2) {
                res := sectorCode1 - sectorCode2
            } else {
                if (sectorCode1 < sectorCode2) {
                    res := sectorCode2 - sectorCode1
                } else {
                    res := 0
                }
            }
        } else {
            if (industryCode1 > 0) {
                if (industryCode1 > industryCode2) {
                    res := industryCode1 - industryCode2
                } else {
                    if (industryCode1 < industryCode2) {
                        res := industryCode2 - industryCode1
                    } else {
                        res := 0
                    }
                }
            } else {
                if (sectorCode1 > 0) {
                    res := -1
                } else {
                    if (industryCode2 > 0) {
                        res := -1
                    } else {
                        res := 0
                    }
                }
            }
        }
    }
}

// P3
method compare3(fiscalQuarter1: Int, sectorCode1: Int, industryCode1: Int, fiscalQuarter2: Int, sectorCode2: Int, industryCode2: Int, i: Int) returns (res: Int)
requires forall <_s1>, <_s2>, <_s3> :: _s1[i] == 1 && _s2[i] == 2 && _s3[i] == 3 ==> 
    _s1[fiscalQuarter1] == _s3[fiscalQuarter1] && _s1[sectorCode1] == _s3[sectorCode1] && _s1[industryCode1] == _s3[industryCode1] &&
    _s1[fiscalQuarter2] == _s2[fiscalQuarter1] && _s1[sectorCode2] == _s2[sectorCode1] && _s1[industryCode2] == _s2[industryCode1] &&
    _s2[fiscalQuarter2] == _s3[fiscalQuarter2] && _s2[sectorCode2] == _s3[sectorCode2] && _s2[industryCode2] == _s3[industryCode2]
ensures forall <_s1>, <_s2>, <_s3> :: _s1[i] == 1 && _s2[i] == 2 && _s3[i] == 3 ==>
    (_s1[res] == 0 ==> ((_s2[res] > 0 && _s3[res] > 0) || (_s2[res] < 0 && _s3[res] < 0) ||
        (_s2[res] == 0 && _s3[res] == 0)))
{
    var fiscalRes: Int 
    if (fiscalQuarter1 > fiscalQuarter2) {
        fiscalRes := 1
    } else {
        if (fiscalQuarter1 == fiscalQuarter2) {
            fiscalRes := 0
        } else {
            fiscalRes := -1
        }
    }

    if (fiscalRes != 0) {
        res := fiscalRes
    } else {
        if (sectorCode1 > 0) {
            if (sectorCode1 > sectorCode2) {
                res := sectorCode1 - sectorCode2
            } else {
                if (sectorCode1 < sectorCode2) {
                    res := sectorCode2 - sectorCode1
                } else {
                    res := 0
                }
            }
        } else {
            if (industryCode1 > 0) {
                if (industryCode1 > industryCode2) {
                    res := industryCode1 - industryCode2
                } else {
                    if (industryCode1 < industryCode2) {
                        res := industryCode2 - industryCode1
                    } else {
                        res := 0
                    }
                }
            } else {
                if (sectorCode1 > 0) {
                    res := -1
                } else {
                    if (industryCode2 > 0) {
                        res := -1
                    } else {
                        res := 0
                    }
                }
            }
        }
    }
}