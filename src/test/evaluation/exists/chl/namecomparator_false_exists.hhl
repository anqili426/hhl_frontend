// Original benchmark:
// Source: Marcelo Sousa and Isil Dillig. 2016. Cartesian hoare logic for verifying k-safety properties.
// Available at: https://github.com/marcelosousa/descartes/blob/5eb0eea96200d04073d4b9edcbe333036391e66a/benchmarks/pldi-16/stackoverflow/NameComparator-false.java

// P1
method compare1(name1: Int, name2: Int, priority1: Int, priority2: Int, priority3: Int, i: Int) returns (res: Int)
requires exists <_s1>, <_s2> :: _s1[i] == 1 && _s2[i] == 2 &&
        _s1[name1] == _s2[name2] && _s1[name2] == _s2[name1] &&
        _s1[priority1] == _s2[priority1] && _s1[priority2] == _s2[priority2] &&
        _s1[priority3] == _s2[priority3] &&
        _s1[name1] == _s1[name2] && _s1[name1] == _s1[priority1]
ensures exists <_s1>, <_s2> :: _s1[i] == 1 && _s2[i] == 2 &&
        _s1[res] != -1 * _s2[res]
{
        if (name1 == priority1) {
            res := 1
        } else {
            if (name2 == priority1) {
                res := -1
            } else {
                if (name1 == priority2) {
                    res := 1
                } else {
                    if (name2 == priority2) {
                        res := -1
                    } else {
                        if (name1 == priority3) {
                            res := 1
                        } else {
                            if (name2 == priority3) {
                                res := -1
                            } else {
                                if (name1 > name2) {
                                    res := 1
                                } else {
                                    if (name1 == name2) {
                                        res := 0
                                    } else {
                                        res := -1
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
}