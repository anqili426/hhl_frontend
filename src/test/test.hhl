method test(n: Int, x: Int) returns (y: Int)
requires forall <_s1>, <_s2> :: _s1[x] == _s2[x]
requires forall <_s1> :: (exists <_s2> :: (_s1[n] % 2) != (_s2[n] % 2))
ensures forall <_s1> :: (exists <_s2> :: _s1[x] == _s2[x] && _s1[n] % 2 != _s2[n] % 2)
// ensures forall <_s1> :: (exists <_s2> :: _s1[y] != _s2[y])
{
    /*
    y := 0
    if (n % 2 == 0) {
        y := x + 1
    } else {
        y := x
    }
    */

}