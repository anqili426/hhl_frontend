method test(x: Int) returns (res: Int)
requires exists _s: State :: <_s> && get(_s, x) == 3
ensures exists _s: State :: <_s> && get(_s, res) == get(_s, x)
{
     let $s: State :: <$s>
     let $x: Int :: $x == get($s, x)
     res := 0
    while (res < x)
     invariant $n <= $x ==> exists _s: State :: <_s> && get(_s, res) <= get(_s, x)
     {
         res := res + 1
     }
}