method test_exists_forall(h: Int) returns (l: Int)
requires exists <_s1>, <_s2>:: _s1[h] + 100 < _s2[h]
ensures exists <_s1>, <_s2>:: (forall <_s>:: _s[h] != _s1[h] || _s[l] != _s2[l])
{
    var i: Int
    i := 0
    l := h

	//var inc: Int
	//assume 0 <= inc && inc <= 1

    while syncTotRule (i < 100)
		invariant forall <_s>:: _s[i] <= 100 //&& 0 <= _s[inc] && _s[inc] <= 1
		invariant forall <_s1>, <_s2>:: _s1[i] == _s2[i]
		invariant exists <_s1>, <_s2>:: (forall <_s>:: _s[h] == _s1[h] ==> _s[l] + 100 - _s[i] < _s2[l])
		decreases 100 - i
    {
		l := l + 1
        i := i + 1
    }
}
